[tool:pytest]
# Pytest configuration for DeFi Protocol Integration Tests

# Test discovery
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    integration: Integration tests for DeFi protocols
    unit: Unit integration tests
    contract: Contract integration tests
    e2e: End-to-end integration tests
    yield: Yield calculation tests
    transaction: Transaction generation tests
    balancer: Balancer protocol tests
    uniswap_v3: Uniswap V3 protocol tests
    velodrome: Velodrome protocol tests
    slow: Slow running tests
    fast: Fast running tests

# Test execution
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    --color=yes
    -ra

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings (when using --cov)
[coverage:run]
source = packages/valory/skills/liquidity_trader_abci
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\b:
    @(abc\.)?abstractmethod

[coverage:html]
directory = coverage_html
